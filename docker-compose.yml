services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./scripts/docker-entrypoint.sh gunicorn --bind 0.0.0.0:8000 app.wsgi:app
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres:5432/neverdrugs4
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      FLASK_ENV: development
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./scripts/docker-entrypoint.sh celery -A app.celery_app.celery worker --loglevel=info
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres:5432/neverdrugs4
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      RUN_DB_MIGRATIONS: "0"
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: neverdrugs4
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    command: redis-server --save "" --appendonly no
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
